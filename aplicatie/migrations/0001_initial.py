# Generated by Django 5.1.4 on 2025-02-21 23:48

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nume Autor')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Biografie')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Data Nașterii')),
            ],
            options={
                'verbose_name': 'Autor',
                'verbose_name_plural': 'Autori',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nume Categorie')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descriere')),
            ],
            options={
                'verbose_name': 'Categorie',
                'verbose_name_plural': 'Categorii',
            },
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nume Editură')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Adresă')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Website')),
            ],
            options={
                'verbose_name': 'Editura',
                'verbose_name_plural': 'Edituri',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('favorite_genre', models.CharField(blank=True, max_length=100, verbose_name='Gen literar preferat')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Data nașterii')),
                ('phone_number', models.CharField(blank=True, max_length=20, verbose_name='Număr de telefon')),
                ('address', models.TextField(blank=True, verbose_name='Adresă')),
                ('reading_frequency', models.CharField(choices=[('daily', 'Zilnic'), ('weekly', 'Săptămânal'), ('monthly', 'Lunar'), ('rarely', 'Rareori')], default='weekly', max_length=50, verbose_name='Frecvența lecturii')),
                ('cod', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cod de confirmare')),
                ('email_confirmat', models.BooleanField(default=False, verbose_name='E-mail confirmat')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilizator',
                'verbose_name_plural': 'Utilizatori',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titlu')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descriere')),
                ('price', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Preț')),
                ('publication_date', models.DateField(blank=True, null=True, verbose_name='Data Publicării')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='covers/', verbose_name='Copertă')),
                ('stock', models.IntegerField(default=0, verbose_name='Număr de cărți')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data Creării')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='books', to='aplicatie.author', verbose_name='Autor')),
                ('categories', models.ManyToManyField(related_name='books', to='aplicatie.category', verbose_name='Categorii')),
                ('publisher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='books', to='aplicatie.publisher', verbose_name='Editura')),
            ],
            options={
                'verbose_name': 'Carte',
                'verbose_name_plural': 'Cărți',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(verbose_name='Cantitate')),
                ('order_date', models.DateTimeField(auto_now_add=True, verbose_name='Data Comenzii')),
                ('status', models.CharField(choices=[('PENDING', 'În așteptare'), ('SHIPPED', 'Expediat'), ('CANCELED', 'Anulat')], default='PENDING', max_length=10, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data Creării')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='aplicatie.book', verbose_name='Carte')),
            ],
            options={
                'verbose_name': 'Comandă',
                'verbose_name_plural': 'Comenzi',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Text Recenzie')),
                ('rating', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], verbose_name='Rating')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Data Recenzie')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data Creării')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='aplicatie.book', verbose_name='Carte')),
            ],
            options={
                'verbose_name': 'Recenzie',
                'verbose_name_plural': 'Recenzii',
            },
        ),
    ]
